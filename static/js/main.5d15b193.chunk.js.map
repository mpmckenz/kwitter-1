{"version":3,"sources":["octo1.gif","octo1.png","components/navbar.js","Redux/types.js","Redux/reducers.js","Redux/store.js","Actions/action.js","components/Login.js","components/Register.js","components/EditProfile.js","Actions/editprofileAction.js","components/list.js","components/messages.js","components/Homepage.js","Actions/homepageAction.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","console","log","this","props","pathname","react_default","a","createElement","className","src","octogif","alt","Link","to","id","React","Component","connect","state","router","location","likeMessage","tweet","user","type","payload","unlikeMessage","initialState","messages","profile","username","password","token","success","users","logout","message","likes","userData","displayName","createdAt","about","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","history","createBrowserHistory","basename","process","middleware","routerMiddleware","thunk","store","createStore","connectRouter","arguments","length","undefined","action","Object","objectSpread","userID","userLikeMessageId","messageId","toConsumableArray","concat","liked","filter","applyMiddleware","apply","GET_MESSAGES","api","getMessages","dispatch","axios","get","then","res","statusText","data","push","catch","err","userLoginSuccess","isLoggingIn","userLoginFail","deleteMessage","getState","authKey","method","headers","Content-Type","Authorization","body","JSON","stringify","fetch","Login","handleSubmitLogin","_this","userLogin","handleChangeUser","event","setState","target","value","handleChangePassword","handleRegisterLink","registerLink","Header","as","Form","size","Field","placeholder","onChange","required","autoFocus","Button","onClick","Message","style","boxShadow","Connect","_ref","auth","register","header","response","json","loginResponse","alert","error","Register","passwordRepeat","passwordMatches","handleChangeDisplayName","handleChangeUsername","handleChangeMatch","noMatch","Segment","color","usernameFail","handleLoginLink","loginLink","handleRegister","result","withRouter","registerResult","registerData","ok","EditProfile","matchPassword","handleSubmitEditProfile","editProfile","handleChangeMatchPassword","handleChangeAbout","loggedInUser","changes","List","formatDate","date","day","substring","monthIndex","parseInt","year","time","handleLike","userId","handleUnlike","delete","_this2","mode","likeTweet","postLike","dMessage","Fragment","photo","filename","text","PHOTO_LIST_URL","Messages","componentDidMount","photos","messagesSortedByDate","sort","b","Date","parse","_this$state$photos","map","list","Homepage","handleOnChange","handleSubmit","addTweet","GetUserByID","Card","Image","octojpg","Content","displayname","Meta","Description","extra","numOfPosts","Input","Feed","url","charset","getstate","App","Route","component","Switch","exact","path","render","components_Login","components_Register","components_EditProfile","components_Homepage","Boolean","hostname","match","ReactDOM","es","lib","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,0RCMlCC,mLA8BF,OADAC,QAAQC,IAAIC,KAAKC,MAAMC,UAErBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACZH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAASC,IAAI,GAAGH,UAAU,UAEtCH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,YAGFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACZH,EAAAC,EAAAC,cAAA,MACEC,UAC0B,UAAxBN,KAAKC,MAAMC,UACa,UAAxBF,KAAKC,MAAMC,UACa,cAAxBF,KAAKC,MAAMC,SACP,OACA,IAGNC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,IAAIC,GAAG,aAAhB,UAIFT,EAAAC,EAAAC,cAAA,MACEC,UAC0B,cAAxBN,KAAKC,MAAMC,UACa,MAAxBF,KAAKC,MAAMC,UACa,YAAxBF,KAAKC,MAAMC,SACP,OACA,IAGNC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,QAAQC,GAAG,YAApB,iBAIFT,EAAAC,EAAAC,cAAA,MACEC,UAC0B,cAAxBN,KAAKC,MAAMC,UACa,MAAxBF,KAAKC,MAAMC,UACa,YAAxBF,KAAKC,MAAMC,UACa,UAAxBF,KAAKC,MAAMC,SACP,OACA,IAGNC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,QAAQC,GAAG,YAApB,aAIFT,EAAAC,EAAAC,cAAA,MACEC,UAG0B,cAAxBN,KAAKC,MAAMC,SAA2B,OAAS,IAGjDC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,YAAYC,GAAG,cAAxB,YAIFT,EAAAC,EAAAC,cAAA,MACEC,UAC0B,MAAxBN,KAAKC,MAAMC,UACa,YAAxBF,KAAKC,MAAMC,UACa,cAAxBF,KAAKC,MAAMC,SACP,OACA,IAGNC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,UAAUC,GAAG,cAAtB,oBApGSC,IAAMC,WAkHZC,oBAJS,SAAAC,GACtB,MAAO,CAAEd,SAAUc,EAAMC,OAAOC,SAAShB,WAG5Ba,CAAyBlB,uCClF3BsB,EAAc,SAACC,EAAOC,GACjC,MAAO,CACLC,KAfwB,eAgBxBC,QAAS,CAAEH,QAAOC,UAITG,EAAgB,SAAAJ,GAC3B,MAAO,CACLE,KArB0B,iBAsB1BC,QAASH,uDC7BPK,EAAe,CACnBC,SAAU,GACVC,QAAS,CACPC,SAAU,KACVC,SAAU,KACVC,MAAO,KACPlB,GAAI,KACJmB,QAAS,MAEXC,MAAO,GACPC,OAAQ,CAAEF,SAAS,EAAOG,QAAS,IACnCC,MAAO,GACPC,SAAU,CACRxB,GAAI,EACJgB,SAAU,GACVS,YAAa,GACbC,UAAW,GACXZ,SAAU,GACVa,MAAO,sBC/BLC,EAAmBC,OAAOC,sCAAwCC,IAE3DC,EAAUC,YAAqB,CAC1CC,SAAUC,eAGNC,EAAa,CAACC,2BAAiBL,GAAUM,KAEzCC,EAAQC,YACZC,wBAAcT,EAAdS,CD0Ba,WAAuC,IAA9BrC,EAA8BsC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtB7B,EAAcgC,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQC,EAAOnC,MACb,IDzB8B,qBC0B5B,OAAOoC,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEW,QAAQ+B,OAAAC,EAAA,EAAAD,CAAA,GACH1C,EAAMW,QADJ,CAELf,GAAI6C,EAAOlC,QAAQqC,OACnB7B,QAAS0B,EAAOlC,QAAQQ,QACxBD,MAAO2B,EAAOlC,QAAQO,UAI5B,IDjDwB,eCkDtB,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEU,SAAU+B,EAAO/B,SACjBS,MAAOsB,EAAOI,oBAGlB,ID5DoB,WC6DlB,OAAOH,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAGEqB,YAAaoB,EAAOpB,YACpBT,SAAU6B,EAAO7B,SACjBC,SAAU4B,EAAO5B,WAGrB,IDpEoB,WCqElB,OAAO6B,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEkB,QAASuB,IAGb,IDzEgB,OC0Ed,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEE8C,UAAWL,EAAOK,UAClB3B,MAAMuB,OAAAK,EAAA,EAAAL,CAAK1C,EAAMmB,OAAZ6B,OAAA,CAAmBP,EAAOK,cAGnC,ID/E0B,iBCgFxB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GAAK1C,GAEd,IDhF0B,iBCiFxB,OAAO0C,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEmB,MAAO,CACL8B,MAAOR,EAAOvB,WAIpB,IDvFsB,aCwFpB,OAAOwB,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEiB,OAAQ,CACNF,QAAS0B,EAAO1B,QAChBG,QAASuB,EAAOvB,SAElBP,QAAS,CACPC,SAAU,KACVC,SAAU,KACVC,MAAO,KACPlB,GAAI,KACJmB,QAAS,MAEXI,MAAO,KAEX,IDtGoB,WCuGlB,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEgB,MAAOyB,EAAOzB,QAGlB,ID1GkC,yBC2GhC,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEoB,SAAUqB,EAAOrB,WAGrB,ID7GuB,cC8GrB,OAAOsB,OAAAC,EAAA,EAAAD,CAAA,GACF1C,GAGP,IDjHkB,SCkHhB,OAAO0C,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEmB,MAAOnB,EAAMmB,MAAM+B,OAAO,SAAAJ,GAAS,OAAIA,IAAcL,EAAOK,cAEhE,IDrH0B,iBCyH1B,IDxHuB,cCyHrB,OAAOJ,OAAAC,EAAA,EAAAD,CAAA,GACF1C,GAGP,IDjHgC,uBCkH9B,OAAO0C,OAAAC,EAAA,EAAAD,CAAA,GACF1C,EADL,CAEEoB,SAASsB,OAAAC,EAAA,EAAAD,CAAA,GAAM1C,EAAMoB,SAAaqB,EAAOrB,YAG7C,QACE,OAAOpB,KCpIXwB,EAAiB2B,IAAeC,WAAf,EAAmBpB,KCAzBqB,EAAe,eAEtBC,EAAM,oCAiEL,SAASC,IACd,OAAO,SAASC,GACdC,IACGC,IAAI,kEACJC,KAAK,SAAAC,GACmB,OAAnBA,EAAIC,aACNL,EAAS,CACPlD,KAAM+C,EACN9C,QAAS,CACPG,SAAUkD,EAAIE,KAAKpD,YAGvB8C,EAASO,eAAK,aAGjBC,MAAM,SAAAC,GACLnF,QAAQC,IAAIkF,MAKb,IAkCMC,EAAmB,SAACpD,EAAOC,EAAS6B,GAC/C,MAAO,CACLtC,KH1H8B,qBG2H9BC,QAAS,CACPO,QACAC,UACA6B,YAKOuB,EAAc,WACzB,MAAO,CACL7D,KHtIyB,kBG0IhB8D,EAAgB,WAC3B,MAAO,CACL9D,KH1I2B,oBGwKlB+D,EAAgB,SAAAzE,GAAE,OAAI,SAAC4D,EAAUc,GAE5C,GADiBnC,EAAMmC,WAAW3D,QAAQI,QAC1C,CAGA,IAAMD,EAAQqB,EAAMmC,WAAW3D,QAAQG,MACnCyD,EAAO,UAAAvB,OAAalC,GAGlBuD,EAAgB,CACpBG,OAAQ,SACRC,QAAS,CAAEC,eAAgB,mBAAoBC,cAAeJ,GAC9DK,KAAMC,KAAKC,UAAU,CAAEhC,UAAWlD,KAGpCmF,MAAMzB,EAAM,aAAe1D,EAAIyE,GAAeV,KAAK,SAAAG,GACjD3B,EAAMqB,SAAS,CACblD,KHxMwB,iBGyMxBwC,UAAWgB,EAAKhB,cAGpBX,EAAMqB,SAASD,KACfpB,EAAMqB,SAASO,eAAK,SCzMhBiB,6MACJC,kBAAoB,WAClBC,EAAKjG,MAAMkG,UAAUD,EAAKlF,MAAMY,SAAUsE,EAAKlF,MAAMa,aAGvDuE,iBAAmB,SAAAC,GACjBH,EAAKI,SAAS,CAAE1E,SAAUyE,EAAME,OAAOC,WAGzCC,qBAAuB,SAAAJ,GACrBH,EAAKI,SAAS,CAAEzE,SAAUwE,EAAME,OAAOC,WAGzCE,mBAAqB,WACnBR,EAAKjG,MAAM0G,kBAGb3F,MAAQ,CACNY,SAAU,GACVC,SAAU,4EAIV,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAQtG,UAAU,SAASuG,GAAG,MAA9B,WAGA1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAMC,KAAK,SACT5G,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KAEE7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQ2G,YAAY,WAAWT,MAAQxG,KAAKgB,MAAMY,SAAUsF,SAAWlH,KAAKoG,iBAAkBe,UAAQ,EAACC,WAAS,KAEnIjH,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KAEE7G,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQ2G,YAAY,WAAW3F,KAAK,WAAW4F,SAAWlH,KAAKyG,qBAAuBD,MAAQxG,KAAKgB,MAAMa,SAAUsF,UAAQ,KAE9IhH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAQ/G,UAAU,gBAAgBgB,KAAK,SAASgG,QAAStH,KAAKiG,mBAA9D,WAEF9F,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAASjH,UAAU,OAAOkH,MAAO,CAACC,UAAW,SAA7C,yCAGAtH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAASjH,UAAU,WAAnB,gBAEEH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,OAAOK,GAAG,YAAY2G,QAAStH,KAAK0G,oBACjD,IADH,qBA7CQ5F,aA0EL4G,EALC3G,kBAbQ,SAAA4G,GAAA,MAAyB,CAC/CC,KADsBD,EAAGC,KAEzBC,SAFsBF,EAASE,WAKN,SAAArD,GACzB,MAAO,CACL2B,UAAW,SAACvE,EAAUC,GACpB2C,EDgCmB,SAAC5C,EAAUC,GAAX,OAAwB,SAAA2C,GAC/CA,EAASW,KACT,IAAM2C,EAAS,CACbtC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBE,KAAMC,KAAKC,UAAU,CACnBlE,SAAUA,EACVC,SAAUA,KAIdkE,MAAK,GAAA/B,OAAIM,EAAJ,eAAsBwD,GACxBnD,KAAK,SAAAoD,GAAQ,OAAIA,EAASC,SAC1BrD,KAAK,SAAAsD,GAEAA,EAAclG,SAChByC,EACEU,EACE+C,EAAcnG,MACdmG,EAAclG,QACdkG,EAAcrH,KAGlB4D,EAASO,eAAK,YAEdP,EAASY,KACT8C,MAAM,mCAGTlD,MAAM,SAAAmD,GAAK,OAAI3D,EAASY,QC/Dde,CAAUvE,EAAUC,OAKnBd,CAGdiF,YCxEIoC,6MACJpH,MAAQ,CACNqB,YAAa,GACbT,SAAU,GACVC,SAAU,GACVwG,eAAgB,GAChBC,iBAAiB,KAGnBC,wBAA0B,SAAAlC,GACxBH,EAAKI,SAAS,CACZjE,YAAagE,EAAME,OAAOC,WAI9BgC,qBAAuB,SAAAnC,GACrBH,EAAKI,SAAS,CACZ1E,SAAUyE,EAAME,OAAOC,WAI3BC,qBAAuB,SAAAJ,GACrBH,EAAKI,SAAS,CACZzE,SAAUwE,EAAME,OAAOC,WAI3BiC,kBAAoB,SAAApC,GAClBH,EAAKI,SAAS,CACZ+B,eAAgBhC,EAAME,OAAOC,WAIjCkC,QAAU,WACR,OAAOvI,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAASC,MAAM,OAAf,sCAGTC,aAAe,WACb,OACE1I,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAASC,MAAM,OAAf,mDAMJE,gBAAkB,WAChB5C,EAAKjG,MAAM8I,eAGbC,eAAiB,SAAA3C,GAEbH,EAAKlF,MAAMqB,aACX6D,EAAKlF,MAAMY,UACXsE,EAAKlF,MAAMa,WAAaqE,EAAKlF,MAAMqH,iBAEnCnC,EAAKI,SAAS,CAAEgC,iBAAiB,IACjCxI,QAAQC,IAAI,qBACZmG,EAAKjG,MAAM4H,SAAS,CAClBjG,SAAUsE,EAAKlF,MAAMY,SACrBC,SAAUqE,EAAKlF,MAAMa,SACrBQ,YAAa6D,EAAKlF,MAAMqB,eAIxB6D,EAAKlF,MAAMa,WAAaqE,EAAKlF,MAAMqH,eACrCnC,EAAKI,SAAS,CAAEgC,iBAAiB,IAEjCpC,EAAKI,SAAS,CAAEgC,iBAAiB,6EAKnC,OACEnI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAQtG,UAAU,SAASuG,GAAG,MAA9B,WAGA1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAMC,KAAK,SAET5G,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACE7G,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACV2G,YAAY,eACZT,MAAOxG,KAAKgB,MAAMqB,YAClB6E,SAAUlH,KAAKuI,wBACfpB,UAAQ,EACRC,WAAS,KAGbjH,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACE7G,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACV2G,YAAY,WACZT,MAAOxG,KAAKgB,MAAMY,SAClBsF,SAAUlH,KAAKwI,qBACfrB,UAAQ,KAGZhH,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACE7G,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACV2G,YAAY,WACZ3F,KAAK,WACLkF,MAAOxG,KAAKgB,MAAMa,SAClBqF,SAAUlH,KAAKyG,qBACfU,UAAQ,KAGZhH,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACGhH,KAAKgB,MAAMsH,gBAAkB,KAAOtI,KAAK0I,UAC1CvI,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACV2G,YAAY,oBACZ3F,KAAK,WACLkF,MAAOxG,KAAKgB,MAAMqH,eAClBnB,SAAUlH,KAAKyI,kBACftB,UAAQ,KAGZhH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACE/G,UAAU,gBAYVgH,QAAStH,KAAKgJ,gBAbhB,aAkBF7I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKL,KAAKC,MAAMgJ,SAElB9I,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAASjH,UAAU,OAAOkH,MAAO,CAAEC,UAAW,SAA9C,yCAGAtH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkH,EAAA,EAAD,CAASjH,UAAU,WAAnB,qBAEEH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,OAAOK,GAAG,IAAI2G,QAAStH,KAAK8I,iBACzC,IADH,mBAlJWhI,aAyKRoI,cACbnI,kBAbsB,SAAAC,GACtB,MAAO,CACLiI,OAAQjI,EAAMmI,iBAIS,SAAA3E,GACzB,MAAO,CACLqD,SAAU,SAAAuB,GAAY,OAAI5E,EFzJN,SAAA4E,GAAY,OAAI,SAAA5E,GACtCA,EAAS,CACPlD,KHrBoB,aGwBtByE,MAAM,kDAAmD,CACvDP,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBE,KAAMC,KAAKC,UAAUsD,KAEpBzE,KAAK,SAAAC,GAMJ,OALKA,EAAIyE,IACPzE,EAAIoD,OAAOrD,KAAK,SAAAM,GACd,MAAMA,IAGHL,EAAIoD,SAEZrD,KAAK,SAAAG,GAEJN,EAAS,CACPlD,KHrBwB,mBGsBxBuG,SAAU/C,EACVmE,OAAQ,4BAEVzE,EAASO,eAAK,QAEfC,MAAM,SAAAC,GAELT,EAAS,CACPlD,KH7BqB,gBG8BrB2H,OAAQ,uBAEVf,MAAM,4CEsH2BL,CAASuB,OAK9CrI,CAGEqH,IChLEkB,6MACJtI,MAAQ,CAAEa,SAAU,GAAI0H,cAAe,GAAIlH,YAAa,GAAIE,MAAO,MAEnEiH,wBAA0B,WACxBtD,EAAKjG,MAAMwJ,YACTvD,EAAKlF,MAAMa,SACXqE,EAAKlF,MAAMqB,YACX6D,EAAKlF,MAAMuB,OAEb2D,EAAKI,SAAS,CACZzE,SAAU,GACV0H,cAAe,GACflH,YAAa,GACbE,MAAO,QAIXgG,wBAA0B,SAAAlC,GACxBH,EAAKI,SAAS,CACZjE,YAAagE,EAAME,OAAOC,WAI9BC,qBAAuB,SAAAJ,GACrBH,EAAKI,SAAS,CACZzE,SAAUwE,EAAME,OAAOC,WAG3BkD,0BAA4B,SAAArD,GAC1BH,EAAKI,SAAS,CACZiD,cAAelD,EAAME,OAAOC,WAGhCmD,kBAAoB,SAAAtD,GAClBH,EAAKI,SAAS,CACZ/D,MAAO8D,EAAME,OAAOC,iFAKtB,OACErG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAQtG,UAAU,SAASuG,GAAG,MAA9B,gBAGA1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAMC,KAAK,SACT5G,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACE7G,EAAAC,EAAAC,cAAA,SACEC,UAAU,UACV4G,SAAUlH,KAAK2J,kBACfnD,MAAOxG,KAAKgB,MAAMuB,MAClB0E,YACuB,KAArBjH,KAAKC,MAAMsC,MAAe,WAAavC,KAAKC,MAAMsC,SAIxDpC,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACE7G,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACV4G,SAAUlH,KAAKuI,wBACf/B,MAAOxG,KAAKgB,MAAMqB,YAClB4E,YAC6B,KAA3BjH,KAAKC,MAAMoC,YACP,eACArC,KAAKC,MAAMoC,eAIrBlC,EAAAC,EAAAC,cAACyG,EAAA,EAAKE,MAAN,KACE7G,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACVgB,KAAK,WACLkF,MAAOxG,KAAKgB,MAAMuI,cAClBrC,SAAUlH,KAAK0J,0BACfzC,YAAY,oBAEd9G,EAAAC,EAAAC,cAAA,SACEC,UAAU,QACVgB,KAAK,WACL4F,SAAUlH,KAAKyG,qBACfD,MAAOxG,KAAKgB,MAAMa,SAClBoF,YAAY,2BAGhB9G,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CACE/G,UAAU,gBACVgB,KAAK,SACLgG,QAAStH,KAAKwJ,yBAHhB,mBApFgB3I,IAAMC,WAgHjBC,oBAPS,SAAAC,GAAK,MAAK,CAChC4I,aAAc5I,EAAM4I,aACpBvH,YAAarB,EAAMoB,SAASC,YAC5BT,SAAUZ,EAAMoB,SAASR,SACzBW,MAAOvB,EAAMoB,SAASG,QAZG,SAAAiC,GACzB,MAAO,CAELiF,YAAa,SAAC5H,EAAUQ,EAAaE,GAAxB,OACXiC,EClFqB,SAAC3C,EAAUQ,EAAaE,GAAxB,OAAkC,SAAAiC,GAC3DA,EAhBO,CACLlD,KPiBwB,iBOA1B,IAAMQ,EAAQqB,EAAMmC,WAAW3D,QAAQG,MAEnC+H,EAAU,GACVhI,IAAUgI,EAAO,SAAehI,GAChCQ,IAAawH,EAAO,YAAkBxH,GACtCE,IAAOsH,EAAO,MAAYtH,GAE9BwD,MAAM,0CAA2C,CAC/CP,OAAQ,QACRC,QAAS,CACPC,eAAgB,mBAChBC,cAAa,UAAA3B,OAAYlC,IAE3B8D,KAAMC,KAAKC,UAAU+D,KAEpBlF,KAAK,SAAAC,GAOJ,OALKA,EAAIyE,IACPzE,EAAIoD,OAAOrD,KAAK,SAAAM,GACd,MAAMA,IAGHL,EAAIoD,SAEZrD,KAAK,SAAAtD,GACJmD,EAAS,CACPlD,KPzB4B,uBO0B5Bc,SAAUf,EAAKA,SAIlB2D,MAAM,SAAAC,GACLT,EAAS,CACPlD,KP/ByB,yBM6ElBmI,CAAY5H,EAAUQ,EAAaE,OAWnCxB,CAGbuI,gEEjHIQ,8MAEJ9I,MAAQ,CAAEgB,MAAO,MAmBjB+H,WAAa,SAAAC,GACX,IAgBIC,EAAMD,EAAKE,UAAU,EAAG,IACxBC,EAAaC,SAASJ,EAAKE,UAAU,EAAG,GAAI,IAC5CG,EAAOL,EAAKE,UAAU,EAAG,GACzBI,EAAO,GAOX,OALEA,EADEN,EAAKE,UAAU,GAAI,IAAM,GACpBF,EAAKE,UAAU,GAAI,IAAM,GAAKF,EAAKE,UAAU,GAAI,IAAM,MAEvDF,EAAKE,UAAU,GAAI,IAAM,MAG3BD,EAAM,IA1BI,CACf,GACA,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAa4BE,GAAc,IAAME,EAAO,OAASC,KAGpEC,WAAa,SAACC,EAAQ1G,GAAT,OAAuB,WAClCoC,EAAKjG,MAAMuE,SAASrD,EAAYqJ,EAAQ1G,QAE1C2G,aAAe,SAAA3G,GAAS,OAAI,WAC1BhE,QAAQC,IAAI+D,GACZoC,EAAKjG,MAAMuE,SAAShD,EAAcsC,QAGpC4G,OAAS,SAAArE,GAAK,OAAI,WAChBvG,QAAQC,IAAI,SACZsF,EAAca,EAAKjG,MAAMiC,8FAzDP,IAAAyI,EAAA3K,KAClB+F,MAAM,0CACJ,CACEP,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBkF,KAAM,SAEPjG,KAAK,SAAAoD,GAAQ,OAAIA,EAASC,SAC1BrD,KAAK,SAAAoD,GACJ4C,EAAKrE,SAAS,CACZtE,MAAO+F,EAAS/F,2CAiDtB,ILyFgB8B,EKzFV+G,GLyFU/G,EKzFO9D,KAAKC,MAAM6D,ULyFL,SAACU,EAAUc,GAE1C,GADiBnC,EAAMmC,WAAW3D,QAAQI,QAC1C,CAGA,IAAMD,EAAQqB,EAAMmC,WAAW3D,QAAQG,MAGjCgJ,EAAW,CACftF,OAAQ,OACRC,QAAS,CAAEC,eAAgB,mBAAoBC,cAJtC,UAAA3B,OAAalC,IAKtB8D,KAAMC,KAAKC,UAAU,CAAEhC,UAAWA,KAGpCiC,MAAMzB,EAAM,SAAUwG,GACnBnG,KAAK,SAAAC,GAAG,OAAIA,EAAIoD,SAChBrD,KAAK,SAAAG,GACJ3B,EAAMqB,SAAS,CACblD,KHhLY,OGiLZwC,UAAWgB,EAAKhB,YAElBX,EAAMqB,SAASD,KACfpB,EAAMqB,SAASO,eAAK,WK9GhBgG,EAAW1F,EAAcrF,KAAKC,MAAM6D,WAI1C,OAEE3D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4K,SAAP,KACE7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OACEI,IAAI,YACJF,IAhFE,mCAgFeP,KAAKC,MAAMgL,MAAMjL,KAAKC,MAAMuK,QAAQU,YAGzD/K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQN,KAAK+J,WAAW/J,KAAKC,MAAM+J,OAClD7J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,UAA8BN,KAAKC,MAAMuK,OAAzC,MAEFrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcN,KAAKC,MAAMkL,MACxChL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOgB,KAAK,SAASgG,QAASuD,GAC9C1K,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cADf,IAC+BN,KAAKC,MAAMkC,MAAMoB,OADhD,WAIFpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,UAAQO,GAAG,gBAAgBgI,MAAM,MAAMtB,QAASyD,GAAhD,iBA7FGlK,IAAMC,WA8GVC,qBALS,SAAAC,GAAK,MAAK,CAChCY,SAAUZ,EAAMoB,SAASR,WAIZb,CAEb+I,IClHIsB,GAAiB,6BAoFNC,8MAhFfrK,MAAQ,CAAEU,SAAU,MACpB4J,kBAAoB,WAClBvF,MAAM,6CACJ,CACEP,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBkF,KAAM,SAEPjG,KAAK,SAAAoD,GAAQ,OAAIA,EAASC,SAC1BrD,KAAK,SAAAoD,GACJ7B,EAAKI,SAAS,CACZ5E,SAAUqG,EAASrG,aAKzBqE,MAAMqF,IACHzG,KAAK,SAAAoD,GAAQ,OAAIA,EAASC,SAC1BrD,KAAK,SAAA4G,GACJrF,EAAKI,SAAS,CAAEiF,aAGlBxF,MAAM,0CACN,CACEP,OAAQ,MACRC,QAAS,CACPC,eAAgB,oBAElBkF,KAAM,SAEPjG,KAAK,SAAAoD,GAAQ,OAAIA,EAASC,SAC1BrD,KAAK,SAAAoD,GACJ7B,EAAKI,SAAS,CACZtE,MAAO+F,EAAS/F,aAUxBwJ,qBAAuB,SAAC9J,GACtB,OAAOA,EAAS+J,KAAK,SAACrL,EAAGsL,GAAJ,OAAUC,KAAKC,MAAMF,EAAEpJ,WAAaqJ,KAAKC,MAAMxL,EAAEkC,sFAI/D,IAAAuJ,EACiB7L,KAAKgB,MAArBuK,cADD,IAAAM,EACU,GADVA,EAMP,OACE1L,EAAAC,EAAAC,cAACF,EAAAC,EAAM4K,SAAP,KACE7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,0BACCL,KAAKwL,qBAAqBxL,KAAKgB,MAAMU,UACnCoK,IAAI,SAAC5J,GAAD,OACH/B,EAAAC,EAAAC,cAAC0L,GAAD,CACEvB,OAAQtI,EAAQsI,OAChB1G,UAAW5B,EAAQtB,GACnBoJ,KAAM9H,EAAQI,UACd6I,KAAMjJ,EAAQiJ,KACdhJ,MAAOD,EAAQC,MACf8I,MAAOM,eAtEAzK,aCCjBkL,8MAKJhL,MAAQ,CACNmK,KAAM,MAGRc,eAAiB,SAAA5F,GACfH,EAAKI,SAAS,CACZ6E,KAAM9E,EAAME,OAAOC,WAIvB0F,aAAe,SAAA7F,GACbH,EAAKjG,MAAMkM,SAAS,CAAEjK,QAASgE,EAAKlF,MAAMmK,OAC1CjF,EAAKI,SAAS,CACZpE,QAAS,yFAhBXlC,KAAKC,MAAMmM,+CAqBX,OACEjM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACgM,GAAA,EAAD,KACElM,EAAAC,EAAAC,cAACiM,GAAA,EAAD,CAAO/L,IAAKgM,OACZpM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACgM,GAAA,EAAKG,QAAN,KACErM,EAAAC,EAAAC,cAACgM,GAAA,EAAKzF,OAAN,KAAc5G,KAAKC,MAAMwM,aACzBtM,EAAAC,EAAAC,cAACgM,GAAA,EAAKK,KAAN,KACEvM,EAAAC,EAAAC,cAAA,QAAMC,UAAU,QAAQN,KAAKC,MAAM2B,WAErCzB,EAAAC,EAAAC,cAACgM,GAAA,EAAKM,YAAN,KAAmB3M,KAAKC,MAAMsC,QAEhCpC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACgM,GAAA,EAAKG,QAAN,CAAcI,OAAK,GAAE5M,KAAKC,MAAM4M,WAAhC,aAIN1M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAACyM,GAAA,EAAD,CACExM,UAAU,cACV2G,YAAY,uBACZG,WAAS,EACTF,SAAUlH,KAAKiM,iBAGjB9L,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAQ/G,UAAU,gBAAgBgH,QAAStH,KAAKkM,aAAc5K,KAAK,UAAnE,UAGAnB,EAAAC,EAAAC,cAAC0M,GAAA,EAAD,KACE5M,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqB,GAAD,OAEFvB,EAAAC,EAAAC,cAAA,oBAxDaS,aAgFRC,qBAfS,SAAAC,GAAK,MAAK,CAChC4I,aAAc5I,EAAM4I,aACpB6C,YAAazL,EAAMoB,SAASC,YAC5BT,SAAUZ,EAAMoB,SAASR,SACzBW,MAAOvB,EAAMoB,SAASG,MACtBsK,WAAY7L,EAAMoB,SAASV,SAAS6B,SAGX,SAAAiB,GACzB,MAAO,CACL2H,SAAU,SAAA/K,GAAK,OAAIoD,EPlBC,SAAAmD,GAAA,IAAGzF,EAAHyF,EAAGzF,QAAH,OAAiB,SAACsC,EAAUc,GAClDb,IAAM,CACJe,OAAQ,OACRwH,IAAK,6CACLvH,QAAS,CACPE,cAAe,UAAYL,IAAW3D,QAAQG,MAC9C4D,eAAgB,mBAChBuH,QAAS,SAEXnI,KAAM,CAAEqG,KAAMjJ,KAEbyC,KAAK,WACJH,EAASD,KACTC,EAASO,eAAK,QAEfC,MAAM,SAAAC,GAAG,OAAInF,QAAQC,IAAIkF,MOGEkH,CAAS/K,KACrCgL,YAAa,kBAAM5H,EC9EU,SAACA,EAAU0I,GAC1C1I,EAAS,CACPlD,KXC0B,mBWE5B,IAAMsC,EAASsJ,IAAWvL,QAAQf,GAElCmF,MAAM,2CAA6CnC,GAChDe,KAAK,SAAAC,GAMJ,OALKA,EAAIyE,IACPzE,EAAIoD,OAAOrD,KAAK,SAAAM,GACd,MAAMA,IAGHL,EAAIoD,SAEZrD,KAAK,SAAAG,GACJN,EAAS,CACPlD,KXd8B,yBWe9Bc,SAAU0C,EAAKzD,SAGlB2D,MAAM,SAAAC,GACLT,EAAS,CACPlD,KXnB2B,+BU6EpBP,CAGbiL,IElFImB,oLAEF,OACEhN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOC,UAAWxN,IAClBM,EAAAC,EAAAC,cAACiN,EAAA,EAAD,KACEnN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOG,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAMtN,EAAAC,EAAAC,cAACqN,EAAD,SACpCvN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOI,KAAK,YAAYC,OAAQ,kBAAMtN,EAAAC,EAAAC,cAACsN,EAAD,SACtCxN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOI,KAAK,QAAQC,OAAQ,kBAAMtN,EAAAC,EAAAC,cAACuN,EAAD,SAClCzN,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOI,KAAK,QAAQC,OAAQ,kBAAMtN,EAAAC,EAAAC,cAACwN,GAAD,SAClC1N,EAAAC,EAAAC,cAAC+M,EAAA,EAAD,CAAOI,KAAK,UAAUC,OAAQ,kBAAMtN,EAAAC,EAAAC,cAACqN,EAAD,kBAV5B5M,aAiBHoI,eAAWiE,ICdNW,QACW,cAA7BrL,OAAOvB,SAAS6M,UAEe,UAA7BtL,OAAOvB,SAAS6M,UAEhBtL,OAAOvB,SAAS6M,SAASC,MACvB,kECRNC,IAASR,OACPtN,EAAAC,EAAAC,cAAC6N,EAAA,SAAD,CAAU/K,MAAOA,GACfhD,EAAAC,EAAAC,cAAC8N,EAAA,gBAAD,CAAiBvL,QAASA,GACxBzC,EAAAC,EAAAC,cAAC+N,GAAD,QAGJC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9J,KAAK,SAAA+J,GACjCA,EAAaC","file":"static/js/main.5d15b193.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/octo1.ea815713.gif\";","module.exports = __webpack_public_path__ + \"static/media/octo1.a9d2acdf.png\";","import React from \"react\";\nimport \"../styling/main.css\";\nimport octogif from \"../octo1.gif\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nclass Navbar extends React.Component {\n  // option1:\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     isHidden: true\n  //   };\n  // }\n  // toggleHiddenNavbar = event => {\n  //   this.setState({\n  //     isHidden: !this.state.isHidden\n  //   });\n  // };\n  // USING THIS onClick in the Link tags-> onClick={this.toggleHiddenNavbar.bind(this)}\n  // And a JS object where the child links would go-> {!this.state.isHidden && <NameOfChildComponent/>}\n  // This Child Component would be the li tags containing Link tag\n\n  // Option2\n  // handleNavbar = event => {\n  //   const newNavbar = this.props.filter(pathName => {\n  //     if (pathName.pathname === \"/\")\n  //   })\n  // }\n\n  // Option3\n  // Use ternary statement with css visibility prop\n  // ISSUE WITH THIS CHOICCE IS IT LEAVES TERRIBLE SPACING BETWEEN BUTTONS\n\n  render() {\n    console.log(this.props.pathname);\n    return (\n      <div className=\"navWrapper\">\n        <ul className=\"navBar\">\n          <li>\n            <img src={octogif} alt=\"\" className=\"octo\" />\n          </li>\n          <li className=\"navTitle\">Kwitter</li>\n        </ul>\n\n        <ul className=\"navBarLinks\">\n          <li\n            className={\n              this.props.pathname === \"/edit\" ||\n              this.props.pathname === \"/home\" ||\n              this.props.pathname === \"/register\"\n                ? \"hide\"\n                : \"\"\n            }\n          >\n            <Link to=\"/\" id=\"loginLink\">\n              Login\n            </Link>\n          </li>\n          <li\n            className={\n              this.props.pathname === \"/register\" ||\n              this.props.pathname === \"/\" ||\n              this.props.pathname === \"/logout\"\n                ? \"hide\"\n                : \"\"\n            }\n          >\n            <Link to=\"/edit\" id=\"editLink\">\n              Edit Profile\n            </Link>\n          </li>\n          <li\n            className={\n              this.props.pathname === \"/register\" ||\n              this.props.pathname === \"/\" ||\n              this.props.pathname === \"/logout\" ||\n              this.props.pathname === \"/home\"\n                ? \"hide\"\n                : \"\"\n            }\n          >\n            <Link to=\"/home\" id=\"homeLink\">\n              Homepage\n            </Link>\n          </li>\n          <li\n            className={\n              // this.props.pathname === \"/\" ||\n              // this.props.pathname === \"/logout\" ||\n              this.props.pathname === \"/register\" ? \"hide\" : \"\"\n            }\n          >\n            <Link to=\"/register\" id=\"logoutLink\">\n              Sign up\n            </Link>\n          </li>\n          <li\n            className={\n              this.props.pathname === \"/\" ||\n              this.props.pathname === \"/logout\" ||\n              this.props.pathname === \"/register\"\n                ? \"hide\"\n                : \"\"\n            }\n          >\n            <Link to=\"/logout\" id=\"logoutLink\">\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { pathname: state.router.location.pathname };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","export const LOGIN = \"LOGIN\";\nexport const REGISTER = \"REGISTER\";\nexport const NEW_POST = \"NEW_POST\";\nexport const LIKE = \"LIKE\";\nexport const DELETE_MESSAGE = \"DELETE_MESSAGE\";\nexport const GET_MESSAGES = \"GET_MESSAGES\";\nexport const GET_MESSAGE_ID = \"GET_MESSAGE_ID\";\nexport const GET_LOGOUT = \"GET_LOGOUT\";\nexport const GET_USER = \"GET_USER\";\nexport const GET_USER_BY_ID = \"GET_USER_BY_ID\";\nexport const GET_USER_BY_ID_SUCCESS = \"GET_USER_BY_ID_SUCCESS\";\nexport const GET_USER_BY_ID_FAIL = \"GET_USER_BY_ID_FAIL\";\nexport const MAIN_PAGE = \"MAIN_PAGE\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const UNLIKE = \"UNLIKE\";\nexport const PATCH_PASSWORD = \"PATCH_PASSWORD\";\nexport const PATCH_ABOUT = \"PATCH_ABOUT\";\nexport const IS_LOGGING_IN = \"IS_LOGGING_IN\";\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\nexport const TO_LOGIN = \"TO_LOGIN\";\nexport const TO_REGISTER = \"TO_REGISTER\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\nexport const LIKE_MESSAGE = \"LIKE_MESSAGE\";\nexport const UNLIKE_MESSAGE = \"UNLIKE_MESSAGE\";\nexport const EDIT_PROFILE = \"EDIT_PROFILE\";\nexport const EDIT_PROFILE_SUCCESS = \"EDIT_PROFILE_SUCCESS\";\nexport const EDIT_PROFILE_FAIL = \"EDIT_PROFILE_FAIL\";\n\nexport const addMessage = text => {\n  return {\n    type: ADD_MESSAGE,\n    text\n  };\n};\n\nexport const likeMessage = (tweet, user) => {\n  return {\n    type: LIKE_MESSAGE,\n    payload: { tweet, user }\n  };\n};\n\nexport const unlikeMessage = tweet => {\n  return {\n    type: UNLIKE_MESSAGE,\n    payload: tweet\n  };\n};\n","import {\n  LOGIN,\n  REGISTER,\n  NEW_POST,\n  LIKE,\n  DELETE_MESSAGE,\n  GET_MESSAGE_ID,\n  GET_MESSAGES,\n  GET_LOGOUT,\n  GET_USER,\n  GET_USER_BY_ID_SUCCESS,\n  DELETE_USER,\n  UNLIKE,\n  PATCH_PASSWORD,\n  PATCH_ABOUT,\n  USER_LOGIN_SUCCESS,\n  EDIT_PROFILE_SUCCESS\n} from \"./types\";\n\nconst initialState = {\n  messages: [],\n  profile: {\n    username: null,\n    password: null,\n    token: null,\n    id: null,\n    success: null\n  },\n  users: [],\n  logout: { success: false, message: \"\" },\n  likes: [],\n  userData: {\n    id: 0,\n    username: \"\",\n    displayName: \"\",\n    createdAt: \"\",\n    messages: [],\n    about: \"\"\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOGIN_SUCCESS:\n      return {\n        ...state,\n        profile: {\n          ...state.profile,\n          id: action.payload.userID,\n          success: action.payload.success,\n          token: action.payload.token\n        }\n      };\n\n    case GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.messages,\n        likes: action.userLikeMessageId\n      };\n\n    case REGISTER:\n      return {\n        ...state,\n\n        displayName: action.displayName,\n        username: action.username,\n        password: action.password\n      };\n\n    case NEW_POST:\n      return {\n        ...state,\n        message: action\n      };\n\n    case LIKE:\n      return {\n        ...state,\n        messageId: action.messageId,\n        likes: [...state.likes, action.messageId]\n      };\n\n    case DELETE_MESSAGE:\n      return { ...state };\n\n    case GET_MESSAGE_ID:\n      return {\n        ...state,\n        likes: {\n          liked: action.message\n        }\n      };\n\n    case GET_LOGOUT:\n      return {\n        ...state,\n        logout: {\n          success: action.success,\n          message: action.message\n        },\n        profile: {\n          username: null,\n          password: null,\n          token: null,\n          id: null,\n          success: null\n        },\n        likes: []\n      };\n    case GET_USER:\n      return {\n        ...state,\n        users: action.users\n      };\n\n    case GET_USER_BY_ID_SUCCESS:\n      return {\n        ...state,\n        userData: action.userData\n      };\n\n    case DELETE_USER:\n      return {\n        ...state\n      };\n\n    case UNLIKE:\n      return {\n        ...state,\n        likes: state.likes.filter(messageId => messageId !== action.messageId)\n      };\n    case PATCH_PASSWORD:\n      return {\n        ...state\n      };\n    case PATCH_ABOUT:\n      return {\n        ...state\n      };\n\n    case EDIT_PROFILE_SUCCESS:\n      return {\n        ...state,\n        userData: { ...state.userData, ...action.userData }\n      };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\nimport { createBrowserHistory } from \"history\";\nimport { connectRouter, routerMiddleware } from \"connected-react-router\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n});\n\nconst middleware = [routerMiddleware(history), thunk];\n\nconst store = createStore(\n  connectRouter(history)(reducer), // new root reducer with router state\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nexport { store };\n","import {\n  REGISTER,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  TO_LOGIN,\n  IS_LOGGING_IN,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAIL,\n  LIKE,\n  UNLIKE,\n  DELETE_MESSAGE\n} from \"../Redux/types\";\nimport { push } from \"connected-react-router\";\nimport axios from \"axios\";\nimport { store } from \"../Redux/store\";\n\nexport const GET_MESSAGES = \"GET_MESSAGES\";\nexport const ADD_TWEET = \"ADD_TWEET\";\nconst api = \"https://kwitter-api.herokuapp.com\";\n\nexport const register = registerData => dispatch => {\n  dispatch({\n    type: REGISTER\n  });\n\n  fetch(\"https://kwitter-api.herokuapp.com/auth/register\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(registerData)\n  })\n    .then(res => {\n      if (!res.ok) {\n        res.json().then(err => {\n          throw err;\n        });\n      }\n      return res.json();\n    })\n    .then(data => {\n      // dispatch here\n      dispatch({\n        type: REGISTER_SUCCESS,\n        register: data,\n        result: \"Successfully Registered\"\n      });\n      dispatch(push(\"/\"));\n    })\n    .catch(err => {\n      // dispatch here on fail\n      dispatch({\n        type: REGISTER_FAIL,\n        result: \"Failed to Register\"\n      });\n      alert(\"Username Taken. Please Choose another\");\n    });\n};\n\nexport const loginLink = () => {\n  return {\n    type: TO_LOGIN\n  };\n};\n\nexport const addTweet = ({ message }) => (dispatch, getState) => {\n  axios({\n    method: \"POST\",\n    url: \"https://kwitter-api.herokuapp.com/messages\",\n    headers: {\n      Authorization: \"Bearer \" + getState().profile.token,\n      \"Content-Type\": \"application/json\",\n      charset: \"utf-8\"\n    },\n    data: { text: message }\n  })\n    .then(() => {\n      dispatch(getMessages());\n      dispatch(push(\"/\"));\n    })\n    .catch(err => console.log(err));\n};\n\nexport function getMessages() {\n  return function(dispatch) {\n    axios\n      .get(\"https://kwitter-api.herokuapp.com/messages?limit=1000&offset=0\")\n      .then(res => {\n        if (res.statusText === \"OK\") {\n          dispatch({\n            type: GET_MESSAGES,\n            payload: {\n              messages: res.data.messages\n            }\n          });\n          dispatch(push(\"/home\"));\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n}\n\nexport const userLogin = (username, password) => dispatch => {\n  dispatch(isLoggingIn());\n  const header = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  };\n\n  fetch(`${api}/auth/login`, header)\n    .then(response => response.json())\n    .then(loginResponse => {\n      //add code to push to new URL after this fetch is completed so that it goes to profile page\n      if (loginResponse.success) {\n        dispatch(\n          userLoginSuccess(\n            loginResponse.token,\n            loginResponse.success,\n            loginResponse.id\n          )\n        );\n        dispatch(push(\"/home\"));\n      } else {\n        dispatch(userLoginFail());\n        alert(\"Invalid username or password\");\n      }\n    })\n    .catch(error => dispatch(userLoginFail()));\n};\n\nexport const userLoginSuccess = (token, success, userID) => {\n  return {\n    type: USER_LOGIN_SUCCESS,\n    payload: {\n      token,\n      success,\n      userID\n    }\n  };\n};\n\nexport const isLoggingIn = () => {\n  return {\n    type: IS_LOGGING_IN\n  };\n};\n\nexport const userLoginFail = () => {\n  return {\n    type: USER_LOGIN_FAIL\n  };\n};\n\nexport const like = messageId => (dispatch, getState) => {\n  const loggedIn = store.getState().profile.success;\n  if (!loggedIn) {\n    return;\n  }\n  const token = store.getState().profile.token;\n  let authKey = `Bearer ${token}`;\n\n  const postLike = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\", Authorization: authKey },\n    body: JSON.stringify({ messageId: messageId })\n  };\n\n  fetch(api + \"/likes\", postLike)\n    .then(res => res.json())\n    .then(data => {\n      store.dispatch({\n        type: LIKE,\n        messageId: data.messageId\n      });\n      store.dispatch(getMessages());\n      store.dispatch(push(\"/\"));\n    });\n};\n\nexport const deleteMessage = id => (dispatch, getState) => {\n  const loggedIn = store.getState().profile.success;\n  if (!loggedIn) {\n    return;\n  }\n  const token = store.getState().profile.token;\n  let authKey = `Bearer ${token}`;\n  let dURL = api + \"/messages/\" + id;\n\n  const deleteMessage = {\n    method: \"DELETE\",\n    headers: { \"Content-Type\": \"application/json\", Authorization: authKey },\n    body: JSON.stringify({ messageId: id })\n  };\n\n  fetch(api + \"/messages/\" + id, deleteMessage).then(data => {\n    store.dispatch({\n      type: DELETE_MESSAGE,\n      messageId: data.messageId\n    });\n  });\n  store.dispatch(getMessages());\n  store.dispatch(push(\"/\"));\n};\n","import React, { Component } from \"react\";\nimport { Button, Form, Header, Message } from 'semantic-ui-react';\nimport \"../styling/main.css\"\nimport { userLogin }  from '../Actions/action.js'\nimport { connect } from \"react-redux\"\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Login extends Component {\n  handleSubmitLogin = () => {\n    this.props.userLogin(this.state.username, this.state.password);\n  };\n\n  handleChangeUser = event => {\n    this.setState({ username: event.target.value });\n  };\n\n  handleChangePassword = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  handleRegisterLink = () => {\n    this.props.registerLink();\n  };\n\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  render() {\n    return (\n      <div className=\"login\">\n        <Header className=\"header\" as=\"h2\">\n          Sign In\n        </Header>\n        <Form size=\"large\">\n          <Form.Field>\n          \n            <input className='input' placeholder='Username' value= {this.state.username} onChange= {this.handleChangeUser} required autoFocus />\n          </Form.Field>\n          <Form.Field>\n          \n            <input className='input' placeholder='Password' type=\"password\" onChange= {this.handleChangePassword}  value= {this.state.password} required  />\n          </Form.Field>\n          <Button className='submit-button' type='submit' onClick={this.handleSubmitLogin} >Submit</Button>\n        </Form>\n        <Message className=\"line\" style={{boxShadow: \"none\"}}>\n            _____________________________________\n        </Message>\n        <div>\n          <Message className=\"message\">\n            Not a member?\n            <Link className=\"link\" to=\"/register\" onClick={this.handleRegisterLink}>\n              {\" \"}\n              Sign up\n            </Link>\n          </Message>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth, register }) => ({\n  auth,\n  register\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    userLogin: (username, password) => {\n      dispatch(userLogin(username, password));\n    }\n  };\n};\n\nconst Connect = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Login);\n\nexport default Connect;\n","import React, { Component } from \"react\";\nimport { Button, Form, Header, Message, Segment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { register, loginLink } from \"../Actions/action.js\";\nimport \"../styling/main.css\";\n// import  from \"react-router\";\n\nclass Register extends Component {\n  state = {\n    displayName: \"\",\n    username: \"\",\n    password: \"\",\n    passwordRepeat: \"\",\n    passwordMatches: true\n  };\n\n  handleChangeDisplayName = event => {\n    this.setState({\n      displayName: event.target.value\n    });\n  };\n\n  handleChangeUsername = event => {\n    this.setState({\n      username: event.target.value\n    });\n  };\n\n  handleChangePassword = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n\n  handleChangeMatch = event => {\n    this.setState({\n      passwordRepeat: event.target.value\n    });\n  };\n\n  noMatch = () => {\n    return <Segment color=\"red\">Entered passwords do not match.</Segment>;\n  };\n\n  usernameFail = () => {\n    return (\n      <Segment color=\"red\">\n        Username taken. Choose a different username.\n      </Segment>\n    );\n  };\n\n  handleLoginLink = () => {\n    this.props.loginLink();\n  };\n\n  handleRegister = event => {\n    if (\n      this.state.displayName &&\n      this.state.username &&\n      this.state.password === this.state.passwordRepeat\n    ) {\n      this.setState({ passwordMatches: true });\n      console.log(\"handle was called\");\n      this.props.register({\n        username: this.state.username,\n        password: this.state.password,\n        displayName: this.state.displayName\n      });\n    }\n\n    if (this.state.password !== this.state.passwordRepeat) {\n      this.setState({ passwordMatches: false });\n    } else {\n      this.setState({ passwordMatches: true });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"register\">\n        <Header className=\"header\" as=\"h2\">\n          Sign Up\n        </Header>\n        <Form size=\"large\">\n          {/* { this.props.register.isUsernameFail ? this.usernameFail() : null } */}\n          <Form.Field>\n            <input\n              className=\"input\"\n              placeholder=\"Display Name\"\n              value={this.state.displayName}\n              onChange={this.handleChangeDisplayName}\n              required\n              autoFocus\n            />\n          </Form.Field>\n          <Form.Field>\n            <input\n              className=\"input\"\n              placeholder=\"Username\"\n              value={this.state.username}\n              onChange={this.handleChangeUsername}\n              required\n            />\n          </Form.Field>\n          <Form.Field>\n            <input\n              className=\"input\"\n              placeholder=\"Password\"\n              type=\"password\"\n              value={this.state.password}\n              onChange={this.handleChangePassword}\n              required\n            />\n          </Form.Field>\n          <Form.Field>\n            {this.state.passwordMatches ? null : this.noMatch()}\n            <input\n              className=\"input\"\n              placeholder=\"Re-Enter Password\"\n              type=\"password\"\n              value={this.state.passwordRepeat}\n              onChange={this.handleChangeMatch}\n              required\n            />\n          </Form.Field>\n          <Button\n            className=\"submit-button\"\n            // style={{\n            //     margin: \"auto\",\n            //     textAlign: \"center\",\n            //     height: \"40px\",\n            //     width: \"40%\",\n            //     marginLeft: \"30%\",\n            //     marginRight: \"30%\",\n            //     color: \"white\",\n            //     backgroundColor: \"#A00099\"\n            // }}\n            // type=\"submit\"\n            onClick={this.handleRegister}\n          >\n            Register\n          </Button>\n        </Form>\n        <div>\n          <h3>{this.props.result}</h3>\n        </div>\n        <Message className=\"line\" style={{ boxShadow: \"none\" }}>\n          _____________________________________\n        </Message>\n        <div>\n          <Message className=\"message\">\n            Already signed up?\n            <Link className=\"link\" to=\"/\" onClick={this.handleLoginLink}>\n              {\" \"}\n              Login\n            </Link>\n          </Message>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    result: state.registerResult\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: registerData => dispatch(register(registerData))\n  };\n};\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Register)\n);\n","import React from \"react\";\nimport { Button, Form, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { editProfile } from \"../Actions/editprofileAction\";\n\nclass EditProfile extends React.Component {\n  state = { password: \"\", matchPassword: \"\", displayName: \"\", about: \"\" };\n\n  handleSubmitEditProfile = () => {\n    this.props.editProfile(\n      this.state.password,\n      this.state.displayName,\n      this.state.about\n    );\n    this.setState({\n      password: \"\",\n      matchPassword: \"\",\n      displayName: \"\",\n      about: \"\"\n    });\n  };\n\n  handleChangeDisplayName = event => {\n    this.setState({\n      displayName: event.target.value\n    });\n  };\n\n  handleChangePassword = event => {\n    this.setState({\n      password: event.target.value\n    });\n  };\n  handleChangeMatchPassword = event => {\n    this.setState({\n      matchPassword: event.target.value\n    });\n  };\n  handleChangeAbout = event => {\n    this.setState({\n      about: event.target.value\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"login\">\n        <Header className=\"header\" as=\"h2\">\n          Edit Profile\n        </Header>\n        <Form size=\"large\">\n          <Form.Field>\n            <input\n              className=\"aboutme\"\n              onChange={this.handleChangeAbout}\n              value={this.state.about}\n              placeholder={\n                this.props.about === \"\" ? \"About Me\" : this.props.about\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n            <input\n              className=\"input\"\n              onChange={this.handleChangeDisplayName}\n              value={this.state.displayName}\n              placeholder={\n                this.props.displayName === \"\"\n                  ? \"Display Name\"\n                  : this.props.displayName\n              }\n            />\n          </Form.Field>\n          <Form.Field>\n            <input\n              className=\"input\"\n              type=\"password\"\n              value={this.state.matchPassword}\n              onChange={this.handleChangeMatchPassword}\n              placeholder=\"Update Password\"\n            />\n            <input\n              className=\"input\"\n              type=\"password\"\n              onChange={this.handleChangePassword}\n              value={this.state.password}\n              placeholder=\"Re-enter New Password\"\n            />\n          </Form.Field>\n          <Button\n            className=\"submit-button\"\n            type=\"submit\"\n            onClick={this.handleSubmitEditProfile}\n          >\n            Update\n          </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // GetUserByID: () => dispatch(getUserByID()),\n    editProfile: (password, displayName, about) =>\n      dispatch(editProfile(password, displayName, about))\n  };\n};\n\nconst mapStateToProps = state => ({\n  loggedInUser: state.loggedInUser,\n  displayName: state.userData.displayName,\n  username: state.userData.username,\n  about: state.userData.about\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditProfile);\n","import {\n  EDIT_PROFILE,\n  EDIT_PROFILE_FAIL,\n  EDIT_PROFILE_SUCCESS\n} from \"../Redux/types\";\nimport { getUserByID } from \"./homepageAction\";\nimport { store } from \"../Redux/store\";\n\nexport const isEditingProfile = () => {\n  return {\n    type: EDIT_PROFILE\n  };\n};\nexport const editProfileSuccess = () => {\n  return {\n    type: EDIT_PROFILE_SUCCESS\n  };\n};\nexport const editPrifleFailed = () => {\n  return {\n    type: EDIT_PROFILE_FAIL\n  };\n};\n\nexport const editProfile = (password, displayName, about) => dispatch => {\n  dispatch(isEditingProfile());\n\n  const token = store.getState().profile.token;\n\n  let changes = {};\n  if (password) changes[\"password\"] = password;\n  if (displayName) changes[\"displayName\"] = displayName;\n  if (about) changes[\"about\"] = about;\n\n  fetch(\"https://kwitter-api.herokuapp.com/users\", {\n    method: \"PATCH\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(changes)\n  })\n    .then(res => {\n      // res.text().then(txt => console.log(txt));\n      if (!res.ok) {\n        res.json().then(err => {\n          throw err;\n        });\n      }\n      return res.json();\n    })\n    .then(user => {\n      dispatch({\n        type: EDIT_PROFILE_SUCCESS,\n        userData: user.user\n      });\n    })\n\n    .catch(err => {\n      dispatch({\n        type: EDIT_PROFILE_FAIL\n      });\n    });\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { likeMessage, unlikeMessage } from \"../Redux/types\";\nimport { like, deleteMessage } from \"../Actions/action\";\n\nconst PHOTO_URL = \"https://picsum.photos/200?photo=\";\n\nclass List extends React.Component {\n\n  state = { users: [] }\n\n  componentDidMount() {\n    fetch(\"https://kwitter-api.herokuapp.com/users\", \n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: \"cors\",\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          users: response.users\n        })\n      })\n  }\n\n  formatDate = date => {\n    var monthNames = [\n      \"\",\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n\n    var day = date.substring(8, 10);\n    var monthIndex = parseInt(date.substring(5, 7), 10);\n    var year = date.substring(0, 4);\n    var time = \"\";\n    if (date.substring(11, 13) > 12) {\n      time = date.substring(11, 13) - 12 + date.substring(13, 16) + \" PM\";\n    } else {\n      time = date.substring(11, 16) + \" AM\";\n    }\n\n    return day + \" \" + monthNames[monthIndex] + \" \" + year + \" at \" + time;\n  };\n\n  handleLike = (userId, messageId) => () => {\n    this.props.dispatch(likeMessage(userId, messageId));\n  };\n  handleUnlike = messageId => () => {\n    console.log(messageId);\n    this.props.dispatch(unlikeMessage(messageId));\n  };\n\n  delete = event => () => {\n    console.log(\"hello\");\n    deleteMessage(this.props.message);\n  };\n\n  render() {\n    const likeTweet = like(this.props.messageId);\n    const dMessage = deleteMessage(this.props.messageId);\n    \n    \n\n    return (\n      \n      <React.Fragment>\n        <div className=\"ui medium feed segment\">\n          <div className=\"event\">\n            <div className=\"label\">\n              <img\n                alt=\"thumbnail\"\n                src={PHOTO_URL + this.props.photo[this.props.userId].filename}\n              />\n            </div>\n            <div className=\"content\">\n              <div className=\"date\">{this.formatDate(this.props.date)}</div>\n              <div>\n                <p className=\"userId\"> User: {this.props.userId} </p>\n              </div>\n              <div className=\"extra text\">{this.props.text}</div>\n              <div className=\"meta\">\n                <button className=\"like\" type=\"submit\" onClick={likeTweet}>\n                  <i className=\"like icon\" /> {this.props.likes.length} Likes\n                </button>\n              </div>\n              <div className=\"meta\">\n                <button id=\"delete-button\" color=\"red\" onClick={dMessage}>\n                  X\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  username: state.userData.username,\n})\n\n\nexport default connect(\n  mapStateToProps,\n)(List);\n","import React, { Component } from \"react\";\nimport List from './list.js';\nimport { getUserByID } from \"../Actions/homepageAction.js\";\n\n\nconst PHOTO_LIST_URL = \"https://picsum.photos/list\";\n\nclass Messages extends Component {\n\n  state = { messages: [] }\n  componentDidMount = () => {\n    fetch(\"https://kwitter-api.herokuapp.com/messages\",\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: \"cors\",\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          messages: response.messages,\n        });\n      }\n      );\n\n    fetch(PHOTO_LIST_URL)\n      .then(response => response.json())\n      .then(photos => {\n        this.setState({ photos })\n      });\n\n      fetch(\"https://kwitter-api.herokuapp.com/users\", \n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        mode: \"cors\",\n      })\n      .then(response => response.json())\n      .then(response => {\n        this.setState({\n          users: response.users\n        })\n        // dispatch(getUserByID())\n      })\n      \n\n  }\n\n  \n\n  messagesSortedByDate = (messages) => {\n    return messages.sort((a, b) => Date.parse(b.createdAt) - Date.parse(a.createdAt))\n  }\n\n\n  render() {\n    const { photos = [] } = this.state;\n    \n\n    ;\n    // console.log(this.state)\n    return (\n      <React.Fragment>\n        <div className=\"messages-list\">\n          <h3>All Messages</h3>\n          {this.messagesSortedByDate(this.state.messages)\n            .map((message) =>\n              <List\n                userId={message.userId}\n                messageId={message.id}\n                date={message.createdAt}\n                text={message.text}\n                likes={message.likes}\n                photo={photos}\n              />)}\n        </div>\n      </React.Fragment>\n    );\n  };\n};\n\n\n\n  \n\n  export default Messages\n","import React, { Component } from \"react\";\nimport { Card, Icon, Image, Feed, Input, Button } from \"semantic-ui-react\";\nimport octojpg from \"../octo1.png\";\nimport { connect } from \"react-redux\";\nimport Messages from \"./messages.js\";\nimport { addTweet } from \"../Actions/action.js\";\nimport { getUserByID } from \"../Actions/homepageAction\";\n\nclass Homepage extends Component {\n  componentDidMount() {\n    this.props.GetUserByID();\n  }\n\n  state = {\n    text: \"\"\n  };\n\n  handleOnChange = event => {\n    this.setState({\n      text: event.target.value\n    });\n  };\n\n  handleSubmit = event => {\n    this.props.addTweet({ message: this.state.text });\n    this.setState({\n      message: \"\"\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"userHomepage\">\n        <div className=\"userCard\">\n          <Card>\n            <Image src={octojpg} />\n            <div className=\"userHomepageInfo\">\n              <Card.Content>\n                <Card.Header>{this.props.displayname}</Card.Header>\n                <Card.Meta>\n                  <span className=\"date\">{this.props.username}</span>\n                </Card.Meta>\n                <Card.Description>{this.props.about}</Card.Description>\n              </Card.Content>\n              <br />\n              <Card.Content extra>{this.props.numOfPosts} posts</Card.Content>\n            </div>\n          </Card>\n        </div>\n        <div className=\"userFeed\">\n          <Input\n            className=\"newUserPost\"\n            placeholder=\"What's new with you?\"\n            autoFocus\n            onChange={this.handleOnChange}\n            // value={this.state.text}\n          />\n          <Button className=\"submit-button\" onClick={this.handleSubmit} type=\"submit\">\n            Submit\n          </Button>\n          <Feed>\n            <hr />\n            <Messages />\n          </Feed>\n          <hr />\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = state => ({\n  loggedInUser: state.loggedInUser,\n  displayname: state.userData.displayName,\n  username: state.userData.username,\n  about: state.userData.about,\n  numOfPosts: state.userData.messages.length\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addTweet: tweet => dispatch(addTweet(tweet)),\n    GetUserByID: () => dispatch(getUserByID())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Homepage);\n","import {\n  GET_USER_BY_ID,\n  GET_USER_BY_ID_FAIL,\n  GET_USER_BY_ID_SUCCESS\n} from \"../Redux/types\";\n\nexport const getUserByID = () => (dispatch, getstate) => {\n  dispatch({\n    type: GET_USER_BY_ID\n  });\n\n  const userID = getstate().profile.id;\n\n  fetch(\"https://kwitter-api.herokuapp.com/users/\" + userID)\n    .then(res => {\n      if (!res.ok) {\n        res.json().then(err => {\n          throw err;\n        });\n      }\n      return res.json();\n    })\n    .then(data => {\n      dispatch({\n        type: GET_USER_BY_ID_SUCCESS,\n        userData: data.user\n      });\n    })\n    .catch(err => {\n      dispatch({\n        type: GET_USER_BY_ID_FAIL\n      });\n    });\n};\n","import React, { Component } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\n\nimport Navbar from \"./navbar.js\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport EditProfile from \"./EditProfile\";\nimport Homepage from \"./Homepage\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"background\">\n        <Route component={Navbar} />\n        <Switch>\n          <Route exact path=\"/\" render={() => <Login />} />\n          <Route path=\"/register\" render={() => <Register />} />\n          <Route path=\"/edit\" render={() => <EditProfile />} />\n          <Route path=\"/home\" render={() => <Homepage />} />\n          <Route path=\"/logout\" render={() => <Login />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, history } from \"./Redux/store\";\nimport \"./index.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n\n/*\n  This code sets up Redux devtools and connected-react-router\n  . \n  I have provided it so you do not have to go through the all the setup yourself.\n  However, it would be instructive to go through the setup on your own if you have time. \n  If you would like to go through setup on your own you can see the instructions at the two links below:\n    https://github.com/zalmoxisus/redux-devtools-extension\n    https://github.com/supasate/connected-react-router\n  \n  \n  Quick Setup Instructions\n  DONE 1.) replace your src/index.js with the below code\n  DONE 2.) npm install --save connected-react-router\n  3.) make sure you have a file ./reducers/index.js because it is being imported like that on line 22\n  4.) depending on how your project is strutured, there may be other imports that you have to fix the file path for\n*/\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import App from \"./components/App\";\n// import { createStore, applyMiddleware, compose } from \"redux\";\n// import { Provider } from \"react-redux\";\n// import todoApp from \"./reducers\";\n// import registerServiceWorker from \"./registerServiceWorker\";\n// import \"todomvc-app-css/index.css\";\n// import { createBrowserHistory } from \"history\";\n// import { connectRouter, routerMiddleware } from \"connected-react-router\";\n// import { ConnectedRouter } from \"connected-react-router\";\n\n// const history = createBrowserHistory();\n// const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const store = createStore(\n//   connectRouter(history)(todoApp),\n//   composeEnhancers(\n//     applyMiddleware(\n//       routerMiddleware(history) // for dispatching history actions\n//     )\n//   )\n// );\n\n// ReactDOM.render(\n//   <Provider store={store}>\n//     <ConnectedRouter history={history}>\n//       <App />\n//     </ConnectedRouter>\n//   </Provider>,\n//   document.getElementById(\"root\")\n// );\n\n// Index = () => (\n//   <Provider store={store}>\n//     <ConnectedRouter history={history}>\n//       <App />\n//     </ConnectedRouter>\n//   </Provider>,\n//   document.getElementById(\"root\")\n// )\n\n// registerServiceWorker();\n"],"sourceRoot":""}